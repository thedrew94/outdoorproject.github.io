/* THREE PILLARS TO WRITE GOOD HTML CSS 

RESPONSIVE WEB DESIGN
    fluid layouts
    media querries
    correct units
    desktop/mobile first strategy

MAINTAINABLE AND SCALABLE CODE
    write clean and easy to understand code
    code that can be reusable and maintable
    organize files, naming files, structure HTML

WEB PERFORMANCE
    smaller size and faster
    less http request, little as possible file, little code as possible
    compress code
    less images
    compress images

*/


/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    /* change the box model so that borders and padding are not adding to the total height or width that we specify*/
    box-sizing: border-box;
}

body {
    /* properties related to font are inheritade so we add them in the body, doing so its efficient and will be inherited to the childs of the body */
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    /* 95% of the viewport, responsive design for different size of windows */
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8),
        rgb(40, 180, 133, 0.8)), 
        url('./img/hero.jpg');
    /* by setting cover, no matter the width of the element the img will be so that it fits the element */
    background-size: cover;
    background-position: top;
    /* clip path maker website : https://bennettfeely.com/clippy/ */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    position: relative;
}

.logo-box {
    /* when absolute is specified the measurement will start counting from the nearest parent element that contains position: relative */
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #FFF;
    text-transform: uppercase;

    /* to use when adding animation to fix the bug in the animation (shaking element) */
    backface-visibility: hidden;
    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /* animation-delay: 3s; */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom{
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* button selector pseudo element link, special condition that reacts when click and press */
/* an other pseudo element will be .btn:visited */
.btn:link,
.btn-visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    /* inline block elements are considered as text 
    by setting text-align: center; we can center the element*/
    display: inline-block;
    border-radius: 100px;
    transition: all .2s;
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    /* first value X direction shadow, second value Y direction shadow, third value Blur */
    box-shadow: 0 10px 20px rgb(0, 0, 0, .2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgb(0, 0, 0, .2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    /* in order for this pseudo element to appear on the page the content must be specified even if empty */
    /* this element is considered as a child of the btn */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #FFF;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;
    /* by setting backwards the animation initial state will be set to the keyframes moveInBottom { 0% } to the state at 0%*/
    animation-fill-mode: backwards;
}