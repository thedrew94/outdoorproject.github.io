:root {
    --color-primary: #55c57a;
    --color-primary-light: rgb(126, 213, 111, 0.8);
    --color-primary-dark: rgb(40, 180, 133);
    --color-custom-gray: #777;
    --color-grey-light-1: #f7f7f7;
    --color-black: rgba(0, 0, 0, 1);
    --default-font-size: 1.6rem;

    --grid-width: 114rem;
    --gutter-vertical: 8rem;
    --gutter-horizontal: 6rem;

    --color-secondary-light: #ffb900;
    --color-secondary-dark: #ff7730;
    --color-tertiary-light: #2998ff;
    --color-tertiary-dark: #5643fa;
}

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    /* box sizing property it is not an automatically inherit element */
    box-sizing: inherit;
}

html {
    /* 16px when on 100% font size settings 
    10 % 16px = 0.625 = 62.5%*/
    font-size: 62.5%;
}

body {
    /* properties related to font are inheritade so we add them in the body, doing so its efficient and will be inherited to the childs of the body */
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: var(--color-custom-gray);
    padding: 3rem;

    /* change the box model so that borders and padding are not adding to the total height or width that we specify*/
    box-sizing: border-box;
}

.header {
    /* 95% of the viewport, responsive design for different size of windows */
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
        var(--color-primary-light),
        rgb(40, 180, 133, 0.8)), 
        url('./img/hero.jpg');
    /* by setting cover, no matter the width of the element the img will be so that it fits the element */
    background-size: cover;
    background-position: top;
    /* clip path maker website : https://bennettfeely.com/clippy/ */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    position: relative;
}

.logo-box {
    /* when absolute is specified the measurement will start counting from the nearest parent element that contains position: relative */
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.logo {
    height: 3.5rem;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #FFF;
    text-transform: uppercase;

    /* to use when adding animation to fix the bug in the animation (shaking element) */
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary-main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /* animation-delay: 3s; */
}

.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom{
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* button selector pseudo element link, special condition that reacts when click and press */
/* an other pseudo element will be .btn:visited */
.btn:link,
.btn-visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* inline block elements are considered as text 
    by setting text-align: center; we can center the element*/
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-3px);
    /* first value X direction shadow, second value Y direction shadow, third value Blur */
    box-shadow: 0 1rem 2rem var(--color-black, .2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem var(--color-black, .2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    /* in order for this pseudo element to appear on the page the content must be specified even if empty */
    /* this element is considered as a child of the btn */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #FFF;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;
    /* by setting backwards the animation initial state will be set to the keyframes moveInBottom { 0% } to the state at 0%*/
    animation-fill-mode: backwards;
}

.row {
    display: flex;
    max-width: var(--grid-width);
    /* to center a block element inside of a div */
    margin: 0 auto;
    margin-bottom: var(--gutter-vertical);
}

.row::after {
    content: "";
    display: table;
    clear: both;
}

.row:not(:last-child) {
    margin-bottom: var(--gutter-vertical);
}

.row .col-1-of-2 {
    width: calc(100% - var(--gutter-vertical) / 2);
    float: left;
}

.row .col-1-of-2:not(:last-child) {
    margin-right: var(--gutter-horizontal);
}

.row .col-1-of-3 {
    width: calc(100% - 2 * var(--gutter-horizontal) / 3);
}

.section-about {
    background-color: var(--color-grey-light-1);
    padding: 25rem 0;
    margin-top: -20vh;
}

.section-features {
    margin-top: -20rem;
    display: flex;
    padding: 20rem 0;
    background-image: linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 133, 0.8)
    ),
    url(./img/nat-4.jpg);
    background-size: cover;

    transform: skewY(-7deg);
}

/* .section-features > * {
    transform: skewY(-7deg);
} */


.heading-secondary {
    /* inline blocks are considered text and can be center by using text align center */
    display: inline-block;
    font-size: 3.5rem;
    text-transform: uppercase;
    font-weight: 700;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    letter-spacing: .2rem;
    transition: all .2s;
}

.heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: .5rem 1rem 2rem rgb(0, 0, 0, 0.2);
    /* text-shadow: .5rem 1rem 2rem var(--color-black, 0.2); */
}

.u-center-text {
    text-align: center;
}

.u-margin-bottom-big {
    margin-bottom: 8rem;
}

.heading-tertiary {
    font-size: var(--default-font-size);
    font-weight: 700;
    text-transform: uppercase;
}

.paragraph {
    font-size: var(--default-font-size);
}

.paragraph:not(:last-child) {
    margin-bottom: 3rem;
}

.u-margin-bottom-small {
    margin-bottom: 1.5rem;
}

.u-margin-bottom-medium {
    margin-bottom: 4rem;
}

.btn-text:link, 
.btn-text:visited {
    font-size: var(--default-font-size);
    color: var(--color-primary);
    display: inline-block;
    text-decoration: none;
    border-bottom: .1rem solid var(--color-primary);
    padding: .3rem;
    transition: all .2s;
}

.btn-text:hover {
    background-color: var(--color-primary);
    color: #fff;
    box-shadow: 0 1rem 2rem rgb(0, 0, 0, .15);
    transform: translateY(-2px);
}

.btn-text:active {
    box-shadow: 0 .5rem 2rem rgb(0, 0, 0, .15);
    transform: translateY(0);
}

.composition {
    position: relative;

}

.composition img {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, .4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem;
}

.composition__photo--p1 {
    left: 0;
    top: -2rem;
}

.composition__photo--p2 {
    right: 0;
    top: 2rem;
}

.composition__photo--p3 {
    left: 20%;
    top: 10rem;
}

/* .composition__photo:not(:hover) {
    transform: scale(.9);
} */

.composition__photo:hover {
    outline: 1.5rem solid var(--color-primary);
    transform: scale(1.05) translateY(-1.5rem);
    box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, .5);
    z-index: 20;
}

.feature-box {
    height: 36rem;
    margin-left: 2rem;
    margin-right: 2rem;
    background-color: rgba(255, 255, 255, .8);
    font-size: 1.5rem;
    padding: 2.5rem;
    text-align: center;
    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, .15);
}

.feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    transition: all .3s;
}

.feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03);
}

.adjust {
    transform: skewY(7deg);
    display: flex;
}

.section-tours {
    background-color: var(--color-grey-light-1);
    padding: 25rem 0 50rem 0;
    margin-top: -10rem;
}

.card {
    position: relative;
    perspective: 150rem;
    -moz-perspective: 150rem;
    height: 50rem;
}

.card:hover .card__side--front {
    transform: rotateY(180deg);
}

.card:hover .card__side--back {
    transform: rotateY(0);
}

.card__side {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;

    
    color: #fff;
    font-size: 2rem;
    height: 50rem;
    transition: all .8s ease;

    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgb(0, 0, 0, .15);
}

.card__side--front {
    background-color: #FFF;
}

.card__side--back {
    transform: rotateY(-180deg);
}

.card__side--back-1 {
    background-image: linear-gradient(to right bottom, var(--color-secondary-light), var(--color-secondary-dark));
}
